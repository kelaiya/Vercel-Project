{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _range, _startTime, _previousTime, _deltaTime, _frameCount, _updateTimestamp, _updateStartValue, _lastRangeIncrease, _id, _animate;\nclass RangeAnimation {\n  constructor(range, callback, fps) {\n    __privateAdd(this, _range, void 0);\n    __privateAdd(this, _startTime, void 0);\n    __privateAdd(this, _previousTime, void 0);\n    __privateAdd(this, _deltaTime, void 0);\n    __privateAdd(this, _frameCount, void 0);\n    __privateAdd(this, _updateTimestamp, void 0);\n    __privateAdd(this, _updateStartValue, void 0);\n    __privateAdd(this, _lastRangeIncrease, void 0);\n    __privateAdd(this, _id, 0);\n    __privateAdd(this, _animate, (now = performance.now()) => {\n      __privateSet(this, _id, requestAnimationFrame(__privateGet(this, _animate)));\n      __privateSet(this, _deltaTime, performance.now() - __privateGet(this, _previousTime));\n      const fpsInterval = 1e3 / this.fps;\n      if (__privateGet(this, _deltaTime) > fpsInterval) {\n        __privateSet(this, _previousTime, now - __privateGet(this, _deltaTime) % fpsInterval);\n        const fps = 1e3 / ((now - __privateGet(this, _startTime)) / ++__privateWrapper(this, _frameCount)._);\n        const delta = (now - __privateGet(this, _updateTimestamp)) / 1e3 / this.duration;\n        let value = __privateGet(this, _updateStartValue) + delta * this.playbackRate;\n        const increase = value - __privateGet(this, _range).valueAsNumber;\n        if (increase > 0) {\n          __privateSet(this, _lastRangeIncrease, this.playbackRate / this.duration / fps);\n        } else {\n          __privateSet(this, _lastRangeIncrease, 0.995 * __privateGet(this, _lastRangeIncrease));\n          value = __privateGet(this, _range).valueAsNumber + __privateGet(this, _lastRangeIncrease);\n        }\n        this.callback(value);\n      }\n    });\n    __privateSet(this, _range, range);\n    this.callback = callback;\n    this.fps = fps;\n  }\n  start() {\n    if (__privateGet(this, _id) !== 0) return;\n    __privateSet(this, _previousTime, performance.now());\n    __privateSet(this, _startTime, __privateGet(this, _previousTime));\n    __privateSet(this, _frameCount, 0);\n    __privateGet(this, _animate).call(this);\n  }\n  stop() {\n    if (__privateGet(this, _id) === 0) return;\n    cancelAnimationFrame(__privateGet(this, _id));\n    __privateSet(this, _id, 0);\n  }\n  update({\n    start,\n    duration,\n    playbackRate\n  }) {\n    const increase = start - __privateGet(this, _range).valueAsNumber;\n    const durationDelta = Math.abs(duration - this.duration);\n    if (increase > 0 || increase < -0.03 || durationDelta >= 0.5) {\n      this.callback(start);\n    }\n    __privateSet(this, _updateStartValue, start);\n    __privateSet(this, _updateTimestamp, performance.now());\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n}\n_range = new WeakMap();\n_startTime = new WeakMap();\n_previousTime = new WeakMap();\n_deltaTime = new WeakMap();\n_frameCount = new WeakMap();\n_updateTimestamp = new WeakMap();\n_updateStartValue = new WeakMap();\n_lastRangeIncrease = new WeakMap();\n_id = new WeakMap();\n_animate = new WeakMap();\nexport { RangeAnimation };","map":{"version":3,"names":["__accessCheck","obj","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","value","WeakSet","add","set","__privateSet","setter","__privateWrapper","_","_range","_startTime","_previousTime","_deltaTime","_frameCount","_updateTimestamp","_updateStartValue","_lastRangeIncrease","_id","_animate","RangeAnimation","constructor","range","callback","fps","now","performance","requestAnimationFrame","fpsInterval","delta","duration","playbackRate","increase","valueAsNumber","start","stop","cancelAnimationFrame","update","durationDelta","Math","abs","WeakMap"],"sources":["/Users/kelaiyaparikh/projects/first-app/client/node_modules/media-chrome/dist/utils/range-animation.js"],"sourcesContent":["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _range, _startTime, _previousTime, _deltaTime, _frameCount, _updateTimestamp, _updateStartValue, _lastRangeIncrease, _id, _animate;\nclass RangeAnimation {\n  constructor(range, callback, fps) {\n    __privateAdd(this, _range, void 0);\n    __privateAdd(this, _startTime, void 0);\n    __privateAdd(this, _previousTime, void 0);\n    __privateAdd(this, _deltaTime, void 0);\n    __privateAdd(this, _frameCount, void 0);\n    __privateAdd(this, _updateTimestamp, void 0);\n    __privateAdd(this, _updateStartValue, void 0);\n    __privateAdd(this, _lastRangeIncrease, void 0);\n    __privateAdd(this, _id, 0);\n    __privateAdd(this, _animate, (now = performance.now()) => {\n      __privateSet(this, _id, requestAnimationFrame(__privateGet(this, _animate)));\n      __privateSet(this, _deltaTime, performance.now() - __privateGet(this, _previousTime));\n      const fpsInterval = 1e3 / this.fps;\n      if (__privateGet(this, _deltaTime) > fpsInterval) {\n        __privateSet(this, _previousTime, now - __privateGet(this, _deltaTime) % fpsInterval);\n        const fps = 1e3 / ((now - __privateGet(this, _startTime)) / ++__privateWrapper(this, _frameCount)._);\n        const delta = (now - __privateGet(this, _updateTimestamp)) / 1e3 / this.duration;\n        let value = __privateGet(this, _updateStartValue) + delta * this.playbackRate;\n        const increase = value - __privateGet(this, _range).valueAsNumber;\n        if (increase > 0) {\n          __privateSet(this, _lastRangeIncrease, this.playbackRate / this.duration / fps);\n        } else {\n          __privateSet(this, _lastRangeIncrease, 0.995 * __privateGet(this, _lastRangeIncrease));\n          value = __privateGet(this, _range).valueAsNumber + __privateGet(this, _lastRangeIncrease);\n        }\n        this.callback(value);\n      }\n    });\n    __privateSet(this, _range, range);\n    this.callback = callback;\n    this.fps = fps;\n  }\n  start() {\n    if (__privateGet(this, _id) !== 0)\n      return;\n    __privateSet(this, _previousTime, performance.now());\n    __privateSet(this, _startTime, __privateGet(this, _previousTime));\n    __privateSet(this, _frameCount, 0);\n    __privateGet(this, _animate).call(this);\n  }\n  stop() {\n    if (__privateGet(this, _id) === 0)\n      return;\n    cancelAnimationFrame(__privateGet(this, _id));\n    __privateSet(this, _id, 0);\n  }\n  update({ start, duration, playbackRate }) {\n    const increase = start - __privateGet(this, _range).valueAsNumber;\n    const durationDelta = Math.abs(duration - this.duration);\n    if (increase > 0 || increase < -0.03 || durationDelta >= 0.5) {\n      this.callback(start);\n    }\n    __privateSet(this, _updateStartValue, start);\n    __privateSet(this, _updateTimestamp, performance.now());\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n}\n_range = new WeakMap();\n_startTime = new WeakMap();\n_previousTime = new WeakMap();\n_deltaTime = new WeakMap();\n_frameCount = new WeakMap();\n_updateTimestamp = new WeakMap();\n_updateStartValue = new WeakMap();\n_lastRangeIncrease = new WeakMap();\n_id = new WeakMap();\n_animate = new WeakMap();\nexport {\n  RangeAnimation\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}