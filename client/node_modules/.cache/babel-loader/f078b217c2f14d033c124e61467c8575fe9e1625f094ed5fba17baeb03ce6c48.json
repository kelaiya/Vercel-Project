{"ast":null,"code":"var f = e => {\n  throw TypeError(e);\n};\nvar g = (e, o, t) => o.has(e) || f(\"Cannot \" + t);\nvar u = (e, o, t) => (g(e, o, \"read from private field\"), t ? t.call(e) : o.get(e)),\n  m = (e, o, t) => o.has(e) ? f(\"Cannot add the same private member more than once\") : o instanceof WeakSet ? o.add(e) : o.set(e, t),\n  d = (e, o, t, l) => (g(e, o, \"write to private field\"), l ? l.call(e, t) : o.set(e, t), t);\nvar s = class {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent(o) {\n    return !0;\n  }\n};\nif (typeof DocumentFragment == \"undefined\") {\n  class e extends s {}\n  globalThis.DocumentFragment = e;\n}\nvar n = class extends s {},\n  p = class extends s {},\n  x = {\n    get(e) {},\n    define(e, o, t) {},\n    getName(e) {\n      return null;\n    },\n    upgrade(e) {},\n    whenDefined(e) {\n      return Promise.resolve(n);\n    }\n  },\n  a,\n  h = class {\n    constructor(o, t = {}) {\n      m(this, a);\n      d(this, a, t == null ? void 0 : t.detail);\n    }\n    get detail() {\n      return u(this, a);\n    }\n    initCustomEvent() {}\n  };\na = new WeakMap();\nfunction C(e, o) {\n  return new n();\n}\nvar y = {\n    document: {\n      createElement: C\n    },\n    DocumentFragment,\n    customElements: x,\n    CustomEvent: h,\n    EventTarget: s,\n    HTMLElement: n,\n    HTMLVideoElement: p\n  },\n  b = typeof window == \"undefined\" || typeof globalThis.customElements == \"undefined\",\n  c = b ? y : globalThis,\n  k = b ? y.document : globalThis.document;\nimport { MuxVideoBaseElement as T } from \"@mux/mux-video/base\";\nimport { CastableMediaMixin as E } from \"castable-video/castable-mixin.js\";\nimport { MediaTracksMixin as D } from \"media-tracks\";\nexport * from \"@mux/mux-video/base\";\nvar r,\n  i = class extends E(D(T)) {\n    constructor() {\n      super(...arguments);\n      m(this, r);\n    }\n    get autoplay() {\n      let t = this.getAttribute(\"autoplay\");\n      return t === null ? !1 : t === \"\" ? !0 : t;\n    }\n    set autoplay(t) {\n      let l = this.autoplay;\n      t !== l && (t ? this.setAttribute(\"autoplay\", typeof t == \"string\" ? t : \"\") : this.removeAttribute(\"autoplay\"));\n    }\n    get muxCastCustomData() {\n      return {\n        mux: {\n          playbackId: this.playbackId,\n          minResolution: this.minResolution,\n          maxResolution: this.maxResolution,\n          renditionOrder: this.renditionOrder,\n          customDomain: this.customDomain,\n          tokens: {\n            drm: this.drmToken\n          },\n          envKey: this.envKey,\n          metadata: this.metadata,\n          disableCookies: this.disableCookies,\n          disableTracking: this.disableTracking,\n          beaconCollectionDomain: this.beaconCollectionDomain,\n          startTime: this.startTime,\n          preferCmcd: this.preferCmcd\n        }\n      };\n    }\n    get castCustomData() {\n      var t;\n      return (t = u(this, r)) != null ? t : this.muxCastCustomData;\n    }\n    set castCustomData(t) {\n      d(this, r, t);\n    }\n  };\nr = new WeakMap();\nc.customElements.get(\"mux-video\") || (c.customElements.define(\"mux-video\", i), c.MuxVideoElement = i);\nvar F = i;\nexport { F as default };","map":{"version":3,"names":["s","addEventListener","removeEventListener","dispatchEvent","o","DocumentFragment","e","globalThis","n","p","x","get","define","t","getName","upgrade","whenDefined","Promise","resolve","a","h","constructor","m","d","detail","u","initCustomEvent","WeakMap","C","y","document","createElement","customElements","CustomEvent","EventTarget","HTMLElement","HTMLVideoElement","b","window","c","k","MuxVideoBaseElement","T","CastableMediaMixin","E","MediaTracksMixin","D","r","i","arguments","autoplay","getAttribute","l","setAttribute","removeAttribute","muxCastCustomData","mux","playbackId","minResolution","maxResolution","renditionOrder","customDomain","tokens","drm","drmToken","envKey","metadata","disableCookies","disableTracking","beaconCollectionDomain","startTime","preferCmcd","castCustomData","MuxVideoElement","F","default"],"sources":["/Users/kelaiyaparikh/projects/first-app/client/node_modules/@mux/mux-video/src/polyfills/index.ts","/Users/kelaiyaparikh/projects/first-app/client/node_modules/@mux/mux-video/src/index.ts"],"sourcesContent":["/* eslint @typescript-eslint/no-empty-function: \"off\" */\n\nclass EventTarget {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent(_event: Event) {\n    return true;\n  }\n}\n\n// @github/template-parts requires DocumentFragment to be available on globalThis for SSR\nif (typeof DocumentFragment === 'undefined') {\n  class DocumentFragment extends EventTarget {}\n  // @ts-ignore\n  globalThis.DocumentFragment = DocumentFragment;\n}\n\nclass HTMLElement extends EventTarget {}\nclass HTMLVideoElement extends EventTarget {}\n\nconst customElements: CustomElementRegistry = {\n  get(_name: string) {\n    return undefined;\n  },\n  define(_name, _constructor, _options) {},\n  getName(_constructor) {\n    return null;\n  },\n  upgrade(_root) {},\n  whenDefined(_name) {\n    return Promise.resolve(HTMLElement as unknown as CustomElementConstructor);\n  },\n};\n\nclass CustomEvent {\n  #detail;\n  get detail() {\n    return this.#detail;\n  }\n  constructor(_typeArg: string, eventInitDict: CustomEventInit = {}) {\n    // super(typeArg, eventInitDict);\n    this.#detail = eventInitDict?.detail;\n  }\n  initCustomEvent() {}\n}\n\nfunction createElement(_tagName: string, _options?: ElementCreationOptions): HTMLElement {\n  return new HTMLElement();\n}\n\nconst globalThisShim = {\n  document: {\n    createElement,\n  },\n  DocumentFragment,\n  customElements,\n  CustomEvent,\n  EventTarget,\n  HTMLElement,\n  HTMLVideoElement,\n};\n\n// const isServer = typeof window === 'undefined' || typeof globalThis.customElements === 'undefined';\n// const GlobalThis = isServer ? globalThisShim : globalThis;\n// const Document = isServer ? globalThisShim.document : globalThis.document;\n//\n// export { GlobalThis as globalThis, Document as document };\nconst isServer = typeof window === 'undefined' || typeof globalThis.customElements === 'undefined';\ntype GlobalThis = typeof globalThis;\nconst internalGlobalThis: GlobalThis = (isServer ? globalThisShim : globalThis) as GlobalThis;\nconst internalDocument: Document = (isServer ? globalThisShim.document : globalThis.document) as Document;\n\nexport { internalGlobalThis as globalThis, internalDocument as document };\n","import { globalThis } from './polyfills';\nimport { Autoplay } from '@mux/playback-core';\nimport { MuxVideoBaseElement } from '@mux/mux-video/base';\nimport { CastableMediaMixin } from 'castable-video/castable-mixin.js';\nimport { MediaTracksMixin } from 'media-tracks';\n\nexport * from '@mux/mux-video/base';\n\n// castable-video should be mixed in last so that it can override load().\nclass MuxVideoElement extends CastableMediaMixin(MediaTracksMixin(MuxVideoBaseElement)) {\n  // Define autoplay in the most outer layer because mux-video accepts string | boolean\n  // which is not compatible the CustomVideoElement.autoplay boolean only type.\n  /** @ts-ignore */\n  get autoplay(): Autoplay {\n    const attr = this.getAttribute('autoplay');\n\n    if (attr === null) {\n      return false;\n    } else if (attr === '') {\n      return true;\n    } else {\n      return attr as Autoplay;\n    }\n  }\n\n  /** @ts-ignore */\n  set autoplay(val: Autoplay) {\n    const currentVal = this.autoplay;\n    if (val === currentVal) {\n      return;\n    }\n\n    if (val) {\n      this.setAttribute('autoplay', typeof val === 'string' ? val : '');\n    } else {\n      this.removeAttribute('autoplay');\n    }\n  }\n\n  // NOTE: CastableMediaMixin needs to be a subclass of whatever implements the load() method\n  // (i.e. MuxVideoBaseElement), but we're overriding castCustomData to provide mux-specific\n  // values by default, so it needs to be defined here (i.e. in the composed subclass of\n  // CastableMediaMixin). (CJP)\n  #castCustomData: Record<string, any> | undefined;\n\n  get muxCastCustomData() {\n    return {\n      mux: {\n        // Mux Video values\n        playbackId: this.playbackId,\n        minResolution: this.minResolution,\n        maxResolution: this.maxResolution,\n        renditionOrder: this.renditionOrder,\n        customDomain: this.customDomain,\n        /** @TODO Add this.tokens to MuxVideoElement (CJP) */\n        tokens: {\n          drm: this.drmToken,\n        },\n        // Mux Data values\n        envKey: this.envKey,\n        metadata: this.metadata,\n        disableCookies: this.disableCookies,\n        disableTracking: this.disableTracking,\n        beaconCollectionDomain: this.beaconCollectionDomain,\n        // Playback values\n        startTime: this.startTime,\n        // Other values\n        preferCmcd: this.preferCmcd,\n      },\n    } as const;\n  }\n\n  get castCustomData() {\n    return this.#castCustomData ?? this.muxCastCustomData;\n  }\n\n  set castCustomData(val: Record<string, any> | undefined) {\n    this.#castCustomData = val;\n  }\n}\n\ntype MuxVideoElementType = typeof MuxVideoElement;\ndeclare global {\n  var MuxVideoElement: MuxVideoElementType; // eslint-disable-line\n}\n\nif (!globalThis.customElements.get('mux-video')) {\n  globalThis.customElements.define('mux-video', MuxVideoElement);\n  globalThis.MuxVideoElement = MuxVideoElement;\n}\n\nexport default MuxVideoElement;\n"],"mappings":";;;;;;;AAEA,IAAMA,CAAA,GAAN,MAAkB;EAChBC,iBAAA,EAAmB,CAAC;EACpBC,oBAAA,EAAsB,CAAC;EACvBC,cAAcC,CAAA,EAAe;IAC3B,OAAO,EACT;EAAA;AACF;AAGA,IAAI,OAAOC,gBAAA,IAAqB,aAAa;EAC3C,MAAMC,CAAA,SAAyBN,CAAY;EAE3CO,UAAA,CAAWF,gBAAA,GAAmBC,CAChC;AAAA;AAEA,IAAME,CAAA,GAAN,cAA0BR,CAAY,GAAC;EACjCS,CAAA,GAAN,cAA+BT,CAAY,GAAC;EAEtCU,CAAA,GAAwC;IAC5CC,IAAIL,CAAA,EAAe,CAEnB;IACAM,OAAON,CAAA,EAAOF,CAAA,EAAcS,CAAA,EAAU,CAAC;IACvCC,QAAQR,CAAA,EAAc;MACpB,OAAO,IACT;IAAA;IACAS,QAAQT,CAAA,EAAO,CAAC;IAChBU,YAAYV,CAAA,EAAO;MACjB,OAAOW,OAAA,CAAQC,OAAA,CAAQV,CAAkD,CAC3E;IAAA;EACF;EAhCAW,CAAA;EAkCMC,CAAA,GAAN,MAAkB;IAKhBC,YAAYjB,CAAA,EAAkBS,CAAA,GAAiC,CAAC,GAAG;MAJnES,CAAA,OAAAH,CAAA;MAMEI,CAAA,OAAKJ,CAAA,EAAUN,CAAA,oBAAAA,CAAA,CAAeW,MAAA,CAChC;IAAA;IANA,IAAIA,OAAA,EAAS;MACX,OAAOC,CAAA,OAAKN,CAAA,CACd;IAAA;IAKAO,gBAAA,EAAkB,CAAC;EACrB;AATEP,CAAA,OAAAQ,OAAA;AAWF,SAASC,EAActB,CAAA,EAAkBF,CAAA,EAAgD;EACvF,OAAO,IAAII,CACb,CADa,CACb;AAAA;AAEA,IAAMqB,CAAA,GAAiB;IACrBC,QAAA,EAAU;MACRC,aAAA,EAAAH;IACF;IACAvB,gBAAA;IACA2B,cAAA,EAAAtB,CAAA;IACAuB,WAAA,EAAAb,CAAA;IACAc,WAAA,EAAAlC,CAAA;IACAmC,WAAA,EAAA3B,CAAA;IACA4B,gBAAA,EAAA3B;EACF;EAOM4B,CAAA,GAAW,OAAOC,MAAA,IAAW,eAAe,OAAO/B,UAAA,CAAWyB,cAAA,IAAmB;EAEjFO,CAAA,GAAkCF,CAAA,GAAWR,CAAA,GAAiBtB,UAAA;EAC9DiC,CAAA,GAA8BH,CAAA,GAAWR,CAAA,CAAeC,QAAA,GAAWvB,UAAA,CAAWuB,QAAA;ACpEpF,SAASW,mBAAA,IAAAC,CAAA,QAA2B;AACpC,SAASC,kBAAA,IAAAC,CAAA,QAA0B;AACnC,SAASC,gBAAA,IAAAC,CAAA,QAAwB;AAEjC,cAAc;AANd,IAAAC,CAAA;EASMC,CAAA,GAAN,cAA8BJ,CAAA,CAAmBE,CAAA,CAAiBJ,CAAmB,CAAC,CAAE;IAAxFrB,YAAA;MAAA,SAAA4B,SAAA;MAkCE3B,CAAA,OAAAyB,CAAA;IAAA;IA9BA,IAAIG,SAAA,EAAqB;MACvB,IAAMrC,CAAA,GAAO,KAAKsC,YAAA,CAAa,UAAU;MAEzC,OAAItC,CAAA,KAAS,OACJ,KACEA,CAAA,KAAS,KACX,KAEAA,CAEX;IAAA;IAGA,IAAIqC,SAASrC,CAAA,EAAe;MAC1B,IAAMuC,CAAA,GAAa,KAAKF,QAAA;MACpBrC,CAAA,KAAQuC,CAAA,KAIRvC,CAAA,GACF,KAAKwC,YAAA,CAAa,YAAY,OAAOxC,CAAA,IAAQ,WAAWA,CAAA,GAAM,EAAE,IAEhE,KAAKyC,eAAA,CAAgB,UAAU,EAEnC;IAAA;IAQA,IAAIC,kBAAA,EAAoB;MACtB,OAAO;QACLC,GAAA,EAAK;UAEHC,UAAA,EAAY,KAAKA,UAAA;UACjBC,aAAA,EAAe,KAAKA,aAAA;UACpBC,aAAA,EAAe,KAAKA,aAAA;UACpBC,cAAA,EAAgB,KAAKA,cAAA;UACrBC,YAAA,EAAc,KAAKA,YAAA;UAEnBC,MAAA,EAAQ;YACNC,GAAA,EAAK,KAAKC;UACZ;UAEAC,MAAA,EAAQ,KAAKA,MAAA;UACbC,QAAA,EAAU,KAAKA,QAAA;UACfC,cAAA,EAAgB,KAAKA,cAAA;UACrBC,eAAA,EAAiB,KAAKA,eAAA;UACtBC,sBAAA,EAAwB,KAAKA,sBAAA;UAE7BC,SAAA,EAAW,KAAKA,SAAA;UAEhBC,UAAA,EAAY,KAAKA;QACnB;MACF,CACF;IAAA;IAEA,IAAIC,eAAA,EAAiB;MAxEvB,IAAA3D,CAAA;MAyEI,QAAOA,CAAA,GAAAY,CAAA,OAAKsB,CAAA,MAAL,OAAAlC,CAAA,GAAwB,KAAK0C,iBACtC;IAAA;IAEA,IAAIiB,eAAe3D,CAAA,EAAsC;MACvDU,CAAA,OAAKwB,CAAA,EAAkBlC,CAAA,CACzB;IAAA;EACF;AApCEkC,CAAA,OAAApB,OAAA;AA2CGY,CAAA,CAAWP,cAAA,CAAerB,GAAA,CAAI,WAAW,MAC5C4B,CAAA,CAAWP,cAAA,CAAepB,MAAA,CAAO,aAAaoC,CAAe,GAC7DT,CAAA,CAAWkC,eAAA,GAAkBzB,CAAA;AAG/B,IAAO0B,CAAA,GAAQ1B,CAAA;AAAA,SAAA0B,CAAA,IAAAC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}