{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _slot;\nimport { MediaTextDisplay } from \"./media-text-display.js\";\nimport { getBooleanAttr, getNumericAttr, getOrInsertCSSRule, setBooleanAttr, setNumericAttr } from \"./utils/element-utils.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { formatAsTimePhrase, formatTime } from \"./utils/time.js\";\nimport { MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nconst Attributes = {\n  REMAINING: \"remaining\",\n  SHOW_DURATION: \"showduration\",\n  NO_TOGGLE: \"notoggle\"\n};\nconst CombinedAttributes = [...Object.values(Attributes), MediaUIAttributes.MEDIA_CURRENT_TIME, MediaUIAttributes.MEDIA_DURATION, MediaUIAttributes.MEDIA_SEEKABLE];\nconst ButtonPressedKeys = [\"Enter\", \" \"];\nconst DEFAULT_TIMES_SEP = \"&nbsp;/&nbsp;\";\nconst formatTimesLabel = (el, {\n  timesSep = DEFAULT_TIMES_SEP\n} = {}) => {\n  var _a, _b;\n  const currentTime = (_a = el.mediaCurrentTime) != null ? _a : 0;\n  const [, seekableEnd] = (_b = el.mediaSeekable) != null ? _b : [];\n  let endTime = 0;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n  const timeLabel = el.remaining ? formatTime(0 - (endTime - currentTime)) : formatTime(currentTime);\n  if (!el.showDuration) return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(endTime)}`;\n};\nconst DEFAULT_MISSING_TIME_PHRASE = \"video not loaded, unknown time.\";\nconst updateAriaValueText = el => {\n  var _a;\n  const currentTime = el.mediaCurrentTime;\n  const [, seekableEnd] = (_a = el.mediaSeekable) != null ? _a : [];\n  let endTime = null;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n  if (currentTime == null || endTime === null) {\n    el.setAttribute(\"aria-valuetext\", DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const currentTimePhrase = el.remaining ? formatAsTimePhrase(0 - (endTime - currentTime)) : formatAsTimePhrase(currentTime);\n  if (!el.showDuration) {\n    el.setAttribute(\"aria-valuetext\", currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(endTime);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute(\"aria-valuetext\", fullPhrase);\n};\nfunction getSlotTemplateHTML(_attrs, props) {\n  return /*html*/`\n    <slot>${formatTimesLabel(props)}</slot>\n  `;\n}\nclass MediaTimeDisplay extends MediaTextDisplay {\n  constructor() {\n    super();\n    __privateAdd(this, _slot, void 0);\n    __privateSet(this, _slot, this.shadowRoot.querySelector(\"slot\"));\n    __privateGet(this, _slot).innerHTML = `${formatTimesLabel(this)}`;\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, ...CombinedAttributes, \"disabled\"];\n  }\n  connectedCallback() {\n    const {\n      style\n    } = getOrInsertCSSRule(this.shadowRoot, \":host(:hover:not([notoggle]))\");\n    style.setProperty(\"cursor\", \"var(--media-cursor, pointer)\");\n    style.setProperty(\"background\", \"var(--media-control-hover-background, rgba(50 50 70 / .7))\");\n    if (!this.hasAttribute(\"disabled\")) {\n      this.enable();\n    }\n    this.setAttribute(\"role\", \"progressbar\");\n    this.setAttribute(\"aria-label\", t(\"playback time\"));\n    const keyUpHandler = evt => {\n      const {\n        key\n      } = evt;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener(\"keyup\", keyUpHandler);\n        return;\n      }\n      this.toggleTimeDisplay();\n    };\n    this.addEventListener(\"keydown\", evt => {\n      const {\n        metaKey,\n        altKey,\n        key\n      } = evt;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener(\"keyup\", keyUpHandler);\n        return;\n      }\n      this.addEventListener(\"keyup\", keyUpHandler);\n    });\n    this.addEventListener(\"click\", this.toggleTimeDisplay);\n    super.connectedCallback();\n  }\n  toggleTimeDisplay() {\n    if (this.noToggle) {\n      return;\n    }\n    if (this.hasAttribute(\"remaining\")) {\n      this.removeAttribute(\"remaining\");\n    } else {\n      this.setAttribute(\"remaining\", \"\");\n    }\n  }\n  disconnectedCallback() {\n    this.disable();\n    super.disconnectedCallback();\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (CombinedAttributes.includes(attrName)) {\n      this.update();\n    } else if (attrName === \"disabled\" && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n  enable() {\n    this.tabIndex = 0;\n  }\n  disable() {\n    this.tabIndex = -1;\n  }\n  // Own props\n  /**\n   * Whether to show the remaining time\n   */\n  get remaining() {\n    return getBooleanAttr(this, Attributes.REMAINING);\n  }\n  set remaining(show) {\n    setBooleanAttr(this, Attributes.REMAINING, show);\n  }\n  /**\n   * Whether to show the duration\n   */\n  get showDuration() {\n    return getBooleanAttr(this, Attributes.SHOW_DURATION);\n  }\n  set showDuration(show) {\n    setBooleanAttr(this, Attributes.SHOW_DURATION, show);\n  }\n  /**\n   * Disable the default behavior that toggles between current and remaining time\n   */\n  get noToggle() {\n    return getBooleanAttr(this, Attributes.NO_TOGGLE);\n  }\n  set noToggle(noToggle) {\n    setBooleanAttr(this, Attributes.NO_TOGGLE, noToggle);\n  }\n  // Props derived from media UI attributes\n  /**\n   * Get the duration\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n  /**\n   * The current time in seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n  /**\n   * Range of values that can be seeked to.\n   * An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return void 0;\n    return seekable.split(\":\").map(time => +time);\n  }\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(\":\"));\n  }\n  update() {\n    const timesLabel = formatTimesLabel(this);\n    updateAriaValueText(this);\n    if (timesLabel !== __privateGet(this, _slot).innerHTML) {\n      __privateGet(this, _slot).innerHTML = timesLabel;\n    }\n  }\n}\n_slot = new WeakMap();\nMediaTimeDisplay.getSlotTemplateHTML = getSlotTemplateHTML;\nif (!globalThis.customElements.get(\"media-time-display\")) {\n  globalThis.customElements.define(\"media-time-display\", MediaTimeDisplay);\n}\nvar media_time_display_default = MediaTimeDisplay;\nexport { Attributes, media_time_display_default as default };","map":{"version":3,"names":["__accessCheck","obj","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","value","WeakSet","add","set","__privateSet","setter","_slot","MediaTextDisplay","getBooleanAttr","getNumericAttr","getOrInsertCSSRule","setBooleanAttr","setNumericAttr","globalThis","formatAsTimePhrase","formatTime","MediaUIAttributes","t","Attributes","REMAINING","SHOW_DURATION","NO_TOGGLE","CombinedAttributes","Object","values","MEDIA_CURRENT_TIME","MEDIA_DURATION","MEDIA_SEEKABLE","ButtonPressedKeys","DEFAULT_TIMES_SEP","formatTimesLabel","el","timesSep","_a","_b","currentTime","mediaCurrentTime","seekableEnd","mediaSeekable","endTime","Number","isFinite","mediaDuration","timeLabel","remaining","showDuration","DEFAULT_MISSING_TIME_PHRASE","updateAriaValueText","setAttribute","currentTimePhrase","totalTimePhrase","fullPhrase","getSlotTemplateHTML","_attrs","props","MediaTimeDisplay","constructor","shadowRoot","querySelector","innerHTML","observedAttributes","connectedCallback","style","setProperty","hasAttribute","enable","keyUpHandler","evt","key","includes","removeEventListener","toggleTimeDisplay","addEventListener","metaKey","altKey","noToggle","removeAttribute","disconnectedCallback","disable","attributeChangedCallback","attrName","oldValue","newValue","update","tabIndex","show","time","seekable","getAttribute","split","map","range","join","timesLabel","WeakMap","customElements","define","media_time_display_default","default"],"sources":["/Users/kelaiyaparikh/projects/first-app/client/node_modules/media-chrome/dist/media-time-display.js"],"sourcesContent":["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _slot;\nimport { MediaTextDisplay } from \"./media-text-display.js\";\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getOrInsertCSSRule,\n  setBooleanAttr,\n  setNumericAttr\n} from \"./utils/element-utils.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { formatAsTimePhrase, formatTime } from \"./utils/time.js\";\nimport { MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nconst Attributes = {\n  REMAINING: \"remaining\",\n  SHOW_DURATION: \"showduration\",\n  NO_TOGGLE: \"notoggle\"\n};\nconst CombinedAttributes = [\n  ...Object.values(Attributes),\n  MediaUIAttributes.MEDIA_CURRENT_TIME,\n  MediaUIAttributes.MEDIA_DURATION,\n  MediaUIAttributes.MEDIA_SEEKABLE\n];\nconst ButtonPressedKeys = [\"Enter\", \" \"];\nconst DEFAULT_TIMES_SEP = \"&nbsp;/&nbsp;\";\nconst formatTimesLabel = (el, { timesSep = DEFAULT_TIMES_SEP } = {}) => {\n  var _a, _b;\n  const currentTime = (_a = el.mediaCurrentTime) != null ? _a : 0;\n  const [, seekableEnd] = (_b = el.mediaSeekable) != null ? _b : [];\n  let endTime = 0;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n  const timeLabel = el.remaining ? formatTime(0 - (endTime - currentTime)) : formatTime(currentTime);\n  if (!el.showDuration)\n    return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(endTime)}`;\n};\nconst DEFAULT_MISSING_TIME_PHRASE = \"video not loaded, unknown time.\";\nconst updateAriaValueText = (el) => {\n  var _a;\n  const currentTime = el.mediaCurrentTime;\n  const [, seekableEnd] = (_a = el.mediaSeekable) != null ? _a : [];\n  let endTime = null;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n  if (currentTime == null || endTime === null) {\n    el.setAttribute(\"aria-valuetext\", DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const currentTimePhrase = el.remaining ? formatAsTimePhrase(0 - (endTime - currentTime)) : formatAsTimePhrase(currentTime);\n  if (!el.showDuration) {\n    el.setAttribute(\"aria-valuetext\", currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(endTime);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute(\"aria-valuetext\", fullPhrase);\n};\nfunction getSlotTemplateHTML(_attrs, props) {\n  return (\n    /*html*/\n    `\n    <slot>${formatTimesLabel(props)}</slot>\n  `\n  );\n}\nclass MediaTimeDisplay extends MediaTextDisplay {\n  constructor() {\n    super();\n    __privateAdd(this, _slot, void 0);\n    __privateSet(this, _slot, this.shadowRoot.querySelector(\"slot\"));\n    __privateGet(this, _slot).innerHTML = `${formatTimesLabel(this)}`;\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, ...CombinedAttributes, \"disabled\"];\n  }\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(\n      this.shadowRoot,\n      \":host(:hover:not([notoggle]))\"\n    );\n    style.setProperty(\"cursor\", \"var(--media-cursor, pointer)\");\n    style.setProperty(\n      \"background\",\n      \"var(--media-control-hover-background, rgba(50 50 70 / .7))\"\n    );\n    if (!this.hasAttribute(\"disabled\")) {\n      this.enable();\n    }\n    this.setAttribute(\"role\", \"progressbar\");\n    this.setAttribute(\"aria-label\", t(\"playback time\"));\n    const keyUpHandler = (evt) => {\n      const { key } = evt;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener(\"keyup\", keyUpHandler);\n        return;\n      }\n      this.toggleTimeDisplay();\n    };\n    this.addEventListener(\"keydown\", (evt) => {\n      const { metaKey, altKey, key } = evt;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener(\"keyup\", keyUpHandler);\n        return;\n      }\n      this.addEventListener(\"keyup\", keyUpHandler);\n    });\n    this.addEventListener(\"click\", this.toggleTimeDisplay);\n    super.connectedCallback();\n  }\n  toggleTimeDisplay() {\n    if (this.noToggle) {\n      return;\n    }\n    if (this.hasAttribute(\"remaining\")) {\n      this.removeAttribute(\"remaining\");\n    } else {\n      this.setAttribute(\"remaining\", \"\");\n    }\n  }\n  disconnectedCallback() {\n    this.disable();\n    super.disconnectedCallback();\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (CombinedAttributes.includes(attrName)) {\n      this.update();\n    } else if (attrName === \"disabled\" && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n  enable() {\n    this.tabIndex = 0;\n  }\n  disable() {\n    this.tabIndex = -1;\n  }\n  // Own props\n  /**\n   * Whether to show the remaining time\n   */\n  get remaining() {\n    return getBooleanAttr(this, Attributes.REMAINING);\n  }\n  set remaining(show) {\n    setBooleanAttr(this, Attributes.REMAINING, show);\n  }\n  /**\n   * Whether to show the duration\n   */\n  get showDuration() {\n    return getBooleanAttr(this, Attributes.SHOW_DURATION);\n  }\n  set showDuration(show) {\n    setBooleanAttr(this, Attributes.SHOW_DURATION, show);\n  }\n  /**\n   * Disable the default behavior that toggles between current and remaining time\n   */\n  get noToggle() {\n    return getBooleanAttr(this, Attributes.NO_TOGGLE);\n  }\n  set noToggle(noToggle) {\n    setBooleanAttr(this, Attributes.NO_TOGGLE, noToggle);\n  }\n  // Props derived from media UI attributes\n  /**\n   * Get the duration\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n  /**\n   * The current time in seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n  /**\n   * Range of values that can be seeked to.\n   * An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable)\n      return void 0;\n    return seekable.split(\":\").map((time) => +time);\n  }\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(\":\"));\n  }\n  update() {\n    const timesLabel = formatTimesLabel(this);\n    updateAriaValueText(this);\n    if (timesLabel !== __privateGet(this, _slot).innerHTML) {\n      __privateGet(this, _slot).innerHTML = timesLabel;\n    }\n  }\n}\n_slot = new WeakMap();\nMediaTimeDisplay.getSlotTemplateHTML = getSlotTemplateHTML;\nif (!globalThis.customElements.get(\"media-time-display\")) {\n  globalThis.customElements.define(\"media-time-display\", MediaTimeDisplay);\n}\nvar media_time_display_default = MediaTimeDisplay;\nexport {\n  Attributes,\n  media_time_display_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}