{"ast":null,"code":"import { VideoTrack } from \"./video-track.js\";\nimport { VideoTrackList, addVideoTrack, removeVideoTrack } from \"./video-track-list.js\";\nimport { AudioTrack } from \"./audio-track.js\";\nimport { AudioTrackList, addAudioTrack, removeAudioTrack } from \"./audio-track-list.js\";\nimport { VideoRenditionList } from \"./video-rendition-list.js\";\nimport { AudioRenditionList } from \"./audio-rendition-list.js\";\nimport { getPrivate } from \"./utils.js\";\nconst nativeVideoTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"video\");\nconst nativeAudioTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"audio\");\nfunction MediaTracksMixin(MediaElementClass) {\n  if (!MediaElementClass?.prototype) return MediaElementClass;\n  const videoTracksFn = getBaseMediaTracksFn(MediaElementClass, \"video\");\n  if (!videoTracksFn || `${videoTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoTracks\", {\n      get() {\n        return getVideoTracks(this);\n      }\n    });\n  }\n  const audioTracksFn = getBaseMediaTracksFn(MediaElementClass, \"audio\");\n  if (!audioTracksFn || `${audioTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioTracks\", {\n      get() {\n        return getAudioTracks(this);\n      }\n    });\n  }\n  if (!(\"addVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addVideoTrack = function (kind, label = \"\", language = \"\") {\n      const track = new VideoTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addVideoTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeVideoTrack = removeVideoTrack;\n  }\n  if (!(\"addAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addAudioTrack = function (kind, label = \"\", language = \"\") {\n      const track = new AudioTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addAudioTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeAudioTrack = removeAudioTrack;\n  }\n  if (!(\"videoRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoRenditions\", {\n      get() {\n        return initVideoRenditions(this);\n      }\n    });\n  }\n  const initVideoRenditions = media => {\n    let renditions = getPrivate(media).videoRenditions;\n    if (!renditions) {\n      renditions = new VideoRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).videoRenditions = renditions;\n    }\n    return renditions;\n  };\n  if (!(\"audioRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioRenditions\", {\n      get() {\n        return initAudioRenditions(this);\n      }\n    });\n  }\n  const initAudioRenditions = media => {\n    let renditions = getPrivate(media).audioRenditions;\n    if (!renditions) {\n      renditions = new AudioRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).audioRenditions = renditions;\n    }\n    return renditions;\n  };\n  return MediaElementClass;\n}\nfunction getBaseMediaTracksFn(MediaElementClass, type) {\n  if (MediaElementClass?.prototype) {\n    return Object.getOwnPropertyDescriptor(MediaElementClass.prototype, `${type}Tracks`)?.get;\n  }\n}\nfunction getVideoTracks(media) {\n  let tracks = getPrivate(media).videoTracks;\n  if (!tracks) {\n    tracks = new VideoTrackList();\n    getPrivate(media).videoTracks = tracks;\n    if (nativeVideoTracksFn) {\n      const nativeTracks = nativeVideoTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addVideoTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", event => {\n        if ([...tracks].some(t => t instanceof VideoTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeVideoTrack(nativeTrack);\n          }\n          return;\n        }\n        addVideoTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", event => {\n        removeVideoTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nfunction getAudioTracks(media) {\n  let tracks = getPrivate(media).audioTracks;\n  if (!tracks) {\n    tracks = new AudioTrackList();\n    getPrivate(media).audioTracks = tracks;\n    if (nativeAudioTracksFn) {\n      const nativeTracks = nativeAudioTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addAudioTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", event => {\n        if ([...tracks].some(t => t instanceof AudioTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeAudioTrack(nativeTrack);\n          }\n          return;\n        }\n        addAudioTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", event => {\n        removeAudioTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nexport { MediaTracksMixin };","map":{"version":3,"names":["VideoTrack","VideoTrackList","addVideoTrack","removeVideoTrack","AudioTrack","AudioTrackList","addAudioTrack","removeAudioTrack","VideoRenditionList","AudioRenditionList","getPrivate","nativeVideoTracksFn","getBaseMediaTracksFn","globalThis","HTMLMediaElement","nativeAudioTracksFn","MediaTracksMixin","MediaElementClass","prototype","videoTracksFn","includes","Object","defineProperty","get","getVideoTracks","audioTracksFn","getAudioTracks","kind","label","language","track","initVideoRenditions","media","renditions","videoRenditions","initAudioRenditions","audioRenditions","type","getOwnPropertyDescriptor","tracks","videoTracks","nativeTracks","call","nativeEl","nativeTrack","addEventListener","dispatchEvent","Event","event","some","t","audioTracks"],"sources":["/Users/kelaiyaparikh/projects/first-app/client/node_modules/media-tracks/dist/mixin.js"],"sourcesContent":["import { VideoTrack } from \"./video-track.js\";\nimport { VideoTrackList, addVideoTrack, removeVideoTrack } from \"./video-track-list.js\";\nimport { AudioTrack } from \"./audio-track.js\";\nimport { AudioTrackList, addAudioTrack, removeAudioTrack } from \"./audio-track-list.js\";\nimport { VideoRenditionList } from \"./video-rendition-list.js\";\nimport { AudioRenditionList } from \"./audio-rendition-list.js\";\nimport { getPrivate } from \"./utils.js\";\nconst nativeVideoTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"video\");\nconst nativeAudioTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"audio\");\nfunction MediaTracksMixin(MediaElementClass) {\n  if (!MediaElementClass?.prototype) return MediaElementClass;\n  const videoTracksFn = getBaseMediaTracksFn(MediaElementClass, \"video\");\n  if (!videoTracksFn || `${videoTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoTracks\", {\n      get() {\n        return getVideoTracks(this);\n      }\n    });\n  }\n  const audioTracksFn = getBaseMediaTracksFn(MediaElementClass, \"audio\");\n  if (!audioTracksFn || `${audioTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioTracks\", {\n      get() {\n        return getAudioTracks(this);\n      }\n    });\n  }\n  if (!(\"addVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addVideoTrack = function(kind, label = \"\", language = \"\") {\n      const track = new VideoTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addVideoTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeVideoTrack = removeVideoTrack;\n  }\n  if (!(\"addAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addAudioTrack = function(kind, label = \"\", language = \"\") {\n      const track = new AudioTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addAudioTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeAudioTrack = removeAudioTrack;\n  }\n  if (!(\"videoRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoRenditions\", {\n      get() {\n        return initVideoRenditions(this);\n      }\n    });\n  }\n  const initVideoRenditions = (media) => {\n    let renditions = getPrivate(media).videoRenditions;\n    if (!renditions) {\n      renditions = new VideoRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).videoRenditions = renditions;\n    }\n    return renditions;\n  };\n  if (!(\"audioRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioRenditions\", {\n      get() {\n        return initAudioRenditions(this);\n      }\n    });\n  }\n  const initAudioRenditions = (media) => {\n    let renditions = getPrivate(media).audioRenditions;\n    if (!renditions) {\n      renditions = new AudioRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).audioRenditions = renditions;\n    }\n    return renditions;\n  };\n  return MediaElementClass;\n}\nfunction getBaseMediaTracksFn(MediaElementClass, type) {\n  if (MediaElementClass?.prototype) {\n    return Object.getOwnPropertyDescriptor(MediaElementClass.prototype, `${type}Tracks`)?.get;\n  }\n}\nfunction getVideoTracks(media) {\n  let tracks = getPrivate(media).videoTracks;\n  if (!tracks) {\n    tracks = new VideoTrackList();\n    getPrivate(media).videoTracks = tracks;\n    if (nativeVideoTracksFn) {\n      const nativeTracks = nativeVideoTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addVideoTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof VideoTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeVideoTrack(nativeTrack);\n          }\n          return;\n        }\n        addVideoTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeVideoTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nfunction getAudioTracks(media) {\n  let tracks = getPrivate(media).audioTracks;\n  if (!tracks) {\n    tracks = new AudioTrackList();\n    getPrivate(media).audioTracks = tracks;\n    if (nativeAudioTracksFn) {\n      const nativeTracks = nativeAudioTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addAudioTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof AudioTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeAudioTrack(nativeTrack);\n          }\n          return;\n        }\n        addAudioTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeAudioTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nexport {\n  MediaTracksMixin\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}